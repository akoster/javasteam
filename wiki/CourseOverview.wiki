#summary Overview of JavaSteam materials and sessions

=Books=
    * Head first Java 2nd edition, Kathy Sierra & Bert Bates, February 2005, O’Reilly
    * SCJP Sun Certified Programmer for Java 5 Study Guide (Exam 310-055), Kathy Sierra & Bert Bates, McGraw-Hill/Osborne

=Downloads=
    * Java: JDK SE 6 (http://java.sun.com/javase/downloads)
    * IDE: Eclipse for Java Developers (http://www.eclipse.org/downloads/)
    * Version control: Subclipse (http://subclipse.tigris.org/)
    * Build: Maven2 (http://maven.apache.org/download.html)

=Session 1=
    * reading
        * SCJP ch. 10 ‘Development’ behalve 7.1 (static imports)
        * HFJ ch. 1 ‘Quick dip’ (p.1 - 26)
    * practical
        * Install development tools
        * Create new Eclipse project with mvn archetype:generate
        * Create Hello world Java application 
        * Check project into Subversion (https://javasteam.googlecode.com/svn/trunk/)

=Session 2=
    * reading
        * SCJP ch. 1 & 2 skimmen
        * HFJ ch. 5 
    * practical
        * Create SimpleDotCom game 
        * Add the bug found in the GoogleCode issue tracker
        * Convert the SimpleDotComTestDrive class to a JUnit test case

=Session 3=
    * reading
        * HFJ ch. 6
    * practical
        * Create the full DotComBust game
        * Create a class diagram for the CarRental CRM application using the requirements given in the Wiki
        * Unit testing continued, black/white box, code coverage, mocking
        
=Session 4=
    * reading
        * SCJP ch. 3
        * Browse Pattern references
    * practical       
        * Further flesh out class diagram of CarRental
        * Create classes and JavaDoc matching the class diagram
        * Apply design patterns where useful (see references)
    
=Session 5=
    * reading
       * Browse Swing API
    * practical
        * implement CarRental domain classes in nl.javasteam.carrental.domain
        * add JPA/Hibernate annotations and generate database ddl using maven hibernate3 plugin
        * Add log4j dependency in pom.xml and configure log4j logging
        * write a unit test for a service using Mockito to mock the DAO dependency

=Session 6=
    * reading
        * -         
    * practical:
        * build basic Swing UI for Vehicle and VehiclePolicy maintenance in nl.javasteam.carrental.swing

=Session 7=
    * reading
        * Read 'Constructors shouldn't call overridables': http://www.javapractices.com/topic/TopicAction.do?Id=215
        * SCJP ch. 4 
        * browse Maven book (see references)
        * browse Stackoverflow.com
    * practical:
        * discuss 'Constructors shouldn't call overridables'
        * complete provided implementation of data layer in nl.javasteam.carrental.data
        * complete VehicleServiceImpl (conversion of arguments)
        * complete UI workflow and screen design