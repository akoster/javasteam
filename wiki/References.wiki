Subversion manual
  http://www.germane-software.com/~ser/R_n_R/subversion.html#N61

Semantic versioning
  http://semver.org/

Compiling and running Java programs
  http://www.cs.swarthmore.edu/~newhall/unixhelp/debuggingtips_Java.html

Automated testing tools
  * webservice : soapUI (http://www.eviware.com/)
  * GUI : Selenium (http://seleniumhq.org/)
  * database : DbUnit? (see also http://www.agiledata.org/essays/databaseTesting.html)
  * code coverage : http://www.eclemma.org/
  * mock frameworks : Mockito (http://mockito.googlecode.com/svn/branches/1.5/javadoc/org/mockito/Mockito.html)

Design patterns: http://en.wikipedia.org/wiki/Design_Patterns
  * Abstract factory : http://en.wikipedia.org/wiki/Abstract_factory_pattern
  * Decorator : http://en.wikipedia.org/wiki/Decorator_pattern
  * Adapter : http://en.wikipedia.org/wiki/Adapter_pattern (see also this [http://stackoverflow.com/questions/3253015/is-the-adapter-pattern-usable-in-cases-where-the-different-interface-methods-have article on StackOverflow])
  * Template method : http://en.wikipedia.org/wiki/Template_method_pattern

Java libraries:
  * Swing : http://download.oracle.com/docs/cd/E17476_01/javase/1.5.0/docs/api/javax/swing/JFrame.html

Sun code conventions: http://java.sun.com/docs/codeconv/